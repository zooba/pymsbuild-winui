// ****************************************************** //
// Generated by pymsbuild-winui {{pymsbuild_winui_version}}
// - autoregen: true
// ****************************************************** //

#include "pch.h"
#include "{{page.basename}}.h"
#include "{{page.name}}.g.cpp"

using namespace winrt;
using namespace Microsoft::UI::Xaml;
namespace py = pybind11;
using Cls = winrt::{{namespace}}::implementation::{{page.name}};

PYBIND11_EMBEDDED_MODULE(_{{namespace}}_{{page.name}}, m) {
    py::class_<Cls>(m, "{{page.name}}_View")
{% for p in page.properties %}
        .def_property("{{p.name}}", [](const Cls &c) { return hold(c.{{p.name}}()); }, [](Cls &c, holder<{{p.type}}> v) { c.{{p.name}}(v.v); })
{% endfor %}
{% for c in page.controls %}
        .def_property_readonly("{{c.name}}", [](const Cls &c) { return hold(c.{{c.name}}()); })
{% endfor %}
    ;
};

namespace winrt::{{namespace}}::implementation
{
    {{page.name}}::{{page.name}}()
    {
        ::pybind11::module_::import("_{{namespace}}_{{page.name}}");
        auto module_ = ::pybind11::module_::import("{{namespace}}");
        auto cls = module_.attr("{{page.name}}");
        __pyobj = cls(this);
        InitializeComponent();
    }
{% if page.properties +%}
    // Exposed property getter/setters
{% for p in page.properties %}

    {{p.type}} {{page.name}}::{{p.name}}()
    {
        return __pyobj.attr("{{p.name}}").cast<{{p.type}}>();
    }

    void {{page.name}}::{{p.name}}({{p.type}} value)
    {
        __pyobj.attr("{{page.name}}") = value;
    }
{% endfor %}
{% endif %}
{% if page.handlers +%}
    // Event handlers
{% for h in page.handlers %}

    void {{page.name}}::{{h.name}}(IInspectable const&, {{h.eventarg}} const&)
    {
        __pyobj.attr("{{h.name}}")();
    }
{% endfor %}
{% endif %}
}
