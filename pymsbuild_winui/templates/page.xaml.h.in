{% include "regen-header.tmpl" %}
#pragma once
#include <{{page.name}}.g.h>

namespace winrt::{{namespace}}::implementation
{
    struct {{page.name}} : {{page.name}}T<{{page.name}}>
    {
        {{page.name}}();

{% for prop in page.properties %}
        {{prop.type}} {{prop.name}}() const;
        void {{prop.name}}({{prop.type}} value);
{% endfor %}

{% for h in page.handlers %}
        void {{h.name}}(IInspectable const&, {{h.eventarg if '::' in h.eventarg else ("Microsoft::UI::Xaml::" + h.eventarg)}} const&);
{% endfor %}

        winrt::event_token PropertyChanged(Microsoft::UI::Xaml::Data::PropertyChangedEventHandler const& value);
        void PropertyChanged(winrt::event_token const& token);
    private:
        winrt::event<Microsoft::UI::Xaml::Data::PropertyChangedEventHandler> __propertyChanged;
        pybind11::object __pyobj;

{% for prop in page.properties %}
        {{prop.type}} _{{prop.name}};
{% endfor %}
    };
}

namespace winrt::{{namespace}}::factory_implementation
{
    struct {{page.name}} : {{page.name}}T<{{page.name}}, implementation::{{page.name}}>
    { };
}
