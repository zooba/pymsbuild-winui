// ****************************************************** //
// Generated by scripts\controls.py
// ****************************************************** //
#pragma once

{% for c in all_types %}
{% if c.kind == "runtimeclass" and "__implements__" in c.members %}
template <> struct cvt<{{c.cppname}}>  {
    typedef {{c.cppname}} natural_t;
    typedef const natural_t& cself_t;
    typedef natural_t& self_t;
    typedef typename ::pywinui::holder<natural_t> py_t;
    typedef typename IInspectable arg_t;
    typedef cvt<{{c.cppname}}> param_t;
    natural_t value;
    cvt(arg_t t) : value(t.try_as<natural_t>()) { }
    operator const natural_t & () const { return value; }
    operator py_t () const { return py_t(value); }
    py_t ret() { return py_t(value); }
    std::wstring repr() { return default_winrt_repr(value); }
{% for intf in c.members["__implements__"] %}
    operator {{intf}} () const { return value ? value.as<{{intf}}>() : nullptr; }
{% endfor %}
};

{% endif %}
{% endfor %}
